{"version":3,"sources":["color.js","Statistics.js","App.js","index.js"],"names":["color","COLOR","null","mixed","HTML","JavaScript","Java","Python","CSS","PHP","Ruby","C++","C#","Shell","C","Objective - C","R","VimL","Go","Perl","CoffeeScript","TeX","Swift","Scala","Emacs","Lisp","Haskell","Lua","Clojure","Matlab","Arduino","Groovy","Puppet","Rust","PowerShell","Erlang","Visual Basic","Processing","Assembly","TypeScript","XSLT","ActionScript","ASP","OCaml","D","Scheme","Dart","Julia","F","Elixir","FORTRAN","Haxe","Racket","Logos","background","Image","render","ctx","_ref","resArr","rt","width","height","repos","repoName","requestAnimationFrame","src","fillStyle","createPattern","fill","fillRect","Object","keys","length","save","font","txt","txtWidth","measureText","fillText","restore","resAr","forEach","el","push","entries","array","i","key","value","strokeStyle","beginPath","LANG","arc","Math","PI","stroke","closePath","ball","ind","expr","x","vx","y","vy","radius","draw","message","text","Statistics","this","canvas","getContext","props","languages","map","item","language","unique","filter","index","self","indexOf","res","j","drawBall","_this$props","quantity","balls","_loop","size","name","random","_this","_this$props2","react_default","a","createElement","ref","node","React","PureComponent","WIDTH","window","innerWidth","HEIGHT","innerHeight","fetchAccount","url","concat","fetch","then","r","json","fetchRepos","App","state","error","info","id","query","_this2","Promise","all","response","setState","catch","avatar_url","alt","login","_this3","_this$state","style","display","flexDirection","alignItems","Statistics_Statistics","className","position","padding","onSubmit","e","preventDefault","getAllInfo","placeholder","onChange","target","renderList","showInfo","Component","rootElement","document","getElementById","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.1086af00.chunk.js","sourcesContent":["const COLOR = {\n  null: \"#bbdb93\",\n\n  mixed: \"#bbdb93\",\n\n  HTML: \"#4e6779\",\n\n  JavaScript: \"#39675a\",\n\n  Java: \"#b4c3a8\",\n\n  Python: \"#4f3717\",\n\n  CSS: \"#84a580\",\n\n  PHP: \"#b4c2a5\",\n\n  Ruby: \"#1e3c49\",\n\n  \"C++\": \"#392810\",\n\n  \"C#\": \"#1e3c49\",\n\n  Shell: \"#4e84e6\",\n\n  C: \"#6b8ea3\",\n\n  \"Objective - C\": \"#5b565b\",\n\n  R: \"#5cb8b4\",\n\n  VimL: \"#fff\",\n\n  Go: \"#264b3e\",\n\n  Perl: \"#64a896\",\n\n  CoffeeScript: \"#2f5f75\",\n\n  TeX: \"#2a5466\",\n\n  Swift: \"#744c25\",\n\n  Scala: \"#1f170b\",\n\n  Emacs: \"#4e6779\",\n\n  Lisp: \"#1a342b\",\n\n  Haskell: \"#061412\",\n\n  Lua: \"#376957\",\n\n  Clojure: \"#2d2d2d\",\n\n  Matlab: \"#666666\",\n\n  Arduino: \"#39675a\",\n\n  Groovy: \"#b4c3a8\",\n\n  Puppet: \"#4f3717\",\n\n  Rust: \"#84a580\",\n\n  PowerShell: \"#1e3c49\",\n\n  Erlang: \"#4f3717\",\n\n  \"Visual Basic\": \"#39675a\",\n\n  Processing: \"#1e3c49\",\n\n  Assembly: \"#b4c3a8\",\n\n  TypeScript: \"#4e84e6\",\n\n  XSLT: \"#84a580\",\n\n  ActionScript: \"#1e3c49\",\n\n  ASP: \"#b4c3a8\",\n\n  OCaml: \"#4e84e6\",\n\n  D: \"#4f3717\",\n\n  Scheme: \"#4e84e6\",\n\n  Dart: \"#1e3c49\",\n\n  Julia: \"#4e84e6\",\n\n  F: \"#84a580\",\n\n  Elixir: \"#1e3c49\",\n\n  FORTRAN: \"#b4c3a8\",\n\n  Haxe: \"#4f3717\",\n\n  Racket: \"#39675a\",\n\n  Logos: \"#84a580\"\n};\nexport default { COLOR };\n","import React from \"react\";\nimport LANG from \"./color\";\nlet background = new Image();\n\nfunction arrOfUniqueValues(arr){\n  return arr.filter(\n      (value, index, self) => self.indexOf(value) === index\n  );\n}\n\nfunction render(ctx, { width, height, repos, repoName }, resArr, rt) {\n  requestAnimationFrame(() =>\n    render(ctx, { width, height, repos, repoName }, resArr, rt)\n  );\n  // let t = performance.now();\n  background.src = \"static/media/space2.fa3e3e78.jpg\";\n  ctx.fillStyle = ctx.createPattern(background, \"repeat\");\n  ctx.fill();\n  ctx.fillRect(0, 0, width, height);\n\n  if (Object.keys(repos).length === 0) {\n    ctx.save();\n    ctx.font = \"32px Montserrat\";\n    ctx.fillStyle = \"white\";\n    let txt = \"Let's check your GitHub repo!\";\n    let txtWidth = ctx.measureText(txt).width;\n    ctx.fillText(txt, width / 2 - txtWidth / 2, height / 2 - 16);\n    ctx.restore();\n  } else {\n    ctx.save();\n    ctx.font = \"24px Montserrat\";\n    ctx.fillStyle = \"white\";\n    let resAr=[];\n    resArr.forEach(el=> {\n      resAr.push(Object.entries(el))\n    });\n    resAr.forEach((array,i)=>{\n      let key = array[0][0];\n      let value = array[0][1];\n      ctx.strokeStyle = \"white\";\n      ctx.beginPath();\n      ctx.save();\n      ctx.fillStyle = LANG.COLOR[key];\n      ctx.arc(200 , i * 60 + 70 , value * 2, 0, Math.PI * 2);\n      ctx.stroke();\n      ctx.fill();\n      ctx.restore();\n      ctx.closePath();\n      key !== \"null\"\n          ? ctx.fillText(key + \" [\" + value + \"]\", 200, i * 60+70)\n          : ctx.fillText(\n          \"Mixed\" + \" [\" + value + \"]\",\n          200,\n          i * 60+70\n          );\n    });\n    ctx.restore();\n\n    rt.forEach((ball, ind) => {\n      let expr = ind > 10 ? ind / 10 : ind + 1;\n      ball.x += (ball.vx * expr) / 20;\n      ball.y += (ball.vy * expr) / 15;\n\n      if (\n        ball.y + ball.vy > height - ball.radius ||\n        ball.y + ball.vy < ball.radius\n      ) {\n        ball.vy = -ball.vy;\n      }\n      if (\n        ball.x + ball.vx > width - ball.radius ||\n        ball.x + ball.vx < ball.radius\n      ) {\n        ball.vx = -ball.vx;\n      }\n\n      ball.draw();\n    });\n  }\n  if (repos.message === \"Not Found\") {\n    ctx.save();\n    ctx.font = \"24px Montserrat\";\n    ctx.fillStyle = \"white\";\n    let text = \"There is no such galaxy in GitHub Universe\";\n    let txtWidth = ctx.measureText(text).width;\n    ctx.fillText(text, width / 2 - txtWidth / 2, height / 2 + 12);\n    ctx.restore();\n  }\n}\n\nexport default class Statistics extends React.PureComponent {\n  componentDidMount() {\n    this.ctx = this.canvas.getContext(\"2d\");\n    render(this.ctx, this.props);\n  }\n  componentDidUpdate() {\n    let { repos } = this.props;\n    let resArr = [];\n    let languages = repos.map(item => item.language);\n    let unique = arrOfUniqueValues(languages);\n    for (let i = 0; i < unique.length; i++) {\n      let res = {};\n      let key = unique[i];\n      res[key] = 0;\n      for (let j = 0; j < repos.length; j++) {\n        if (repos[j].language === unique[i]) {\n          res[key]++;\n        }\n      }\n      resArr.push(res);\n    }\n\n    render(this.ctx, this.props, resArr, this.drawBall());\n  }\n\n  drawBall() {\n    let { repos, width, height } = this.props;\n    let quantity = repos.length;\n    let ctx = this.ctx;\n    let balls = [];\n    for (let i = 0; i < quantity; i++) {\n      let size = repos[i].size;\n      let language = repos[i].language;\n      let name = repos[i].name;\n      let ball = {\n        x: Math.random() * (width - (2 * size) / 1000) + size / 1000,\n        y: Math.random() * (height - (2 * size) / 1000) + size / 1000,\n        vx: 4,\n        vy: 3,\n        radius: size / 1000,\n        color: LANG.COLOR[language],\n        draw: function() {\n          ctx.save();\n          ctx.beginPath();\n          ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\n          ctx.closePath();\n          ctx.fillStyle = this.color;\n          ctx.fill();\n          ctx.strokeStyle = \"white\";\n          ctx.stroke();\n          ctx.save();\n          ctx.font = \"14px Montserrat\";\n          ctx.fillStyle = \"#fff\";\n          let txtWidth = ctx.measureText(name).width;\n          ctx.fillText(name, this.x - txtWidth / 2, this.y + 7);\n          ctx.restore();\n          ctx.restore();\n        }\n      };\n      balls.push(ball);\n    }\n\n    return balls;\n  }\n  render() {\n    const { width, height } = this.props;\n    return (\n      <canvas\n        ref={node => {\n          this.canvas = node;\n        }}\n        width={width}\n        height={height}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Statistics from \"./Statistics\";\nimport \"./styles.css\";\n\nlet WIDTH = window.innerWidth;\nlet HEIGHT = window.innerHeight;\n\nfunction fetchAccount(repoName) {\n  let url = `https://api.github.com/users/${repoName}`;\n  return fetch(url).then(r => r.json());\n}\n\nfunction fetchRepos(repoName) {\n  let url = `https://api.github.com/users/${repoName}/repos?sort=updated&direction=desc`;\n\n  return fetch(url).then(r => r.json());\n}\n\nexport default class App extends React.Component {\n  state = {\n    repoName: \"\",\n    repos: [],\n    error: null,\n    info: []\n  };\n  renderList(props) {\n    return (\n      <ul>\n        {props.map(item => (\n          <li key={item.id}>\n            {item.name}{\" \"}\n            <strong>({item.language || \"mixed\"})</strong>{\" \"}\n            {item.size} KB\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  getAllInfo(query) {\n    return Promise.all\n    ([fetchRepos(query),\n      fetchAccount(query)]).then((response)=>{\n      this.setState({repos:response[0], info:response[1]})\n    }).catch(error => this.setState({ error }));\n  }\n\n\n  showInfo() {\n    let { info } = this.state;\n    return (\n      <div>\n        {info.name ? <img src={info.avatar_url} alt={info.login} /> : \"\"}\n        <span>{info.name}</span>\n      </div>\n    );\n  }\n\n  render() {\n    const { repoName, repos, error } = this.state;\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        }}\n      >\n        <Statistics\n          repos={repos}\n          width={WIDTH}\n          height={HEIGHT}\n          repoName={repoName}\n        />\n        <div className={\"info\"} style={{ position: \"absolute\" }}>\n          <form\n            style={{\n              padding: \"16px 40px\"\n            }}\n            onSubmit={e => {\n              e.preventDefault();\n              this.getAllInfo(repoName)\n            }}\n          >\n            <input\n              value={repoName}\n              placeholder={\"Enter github name\"}\n              onChange={e => this.setState({ repoName: e.target.value })}\n            />\n            <button>Submit</button>\n          </form>\n          {error && <pre style={{ color: \"red\" }}>{error.message}</pre>}\n          {this.renderList(repos)}\n        </div>\n        <div className={\"infoAcc\"}>{this.showInfo()}</div>\n      </div>\n    );\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import * as THREE from \"three\";\n// import * as shaders from \"./shaders\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n// let WIDTH = window.innerWidth;\n// let HEIGHT = window.innerHeight;\n// let canvas = document.createElement(\"canvas\");\n// canvas.width = WIDTH;\n// canvas.height = HEIGHT;\n//\n//\n// rootElement.append(canvas);\n// //\n// let ctx = canvas.getContext(\"2d\");\n//\n// ctx.fillRect(10, 10, 100, 200);\n//\n// ctx.fillStyle = \"red\";\n// ctx.fillRect(120, 10, 100, 200);\n//\n// ctx.moveTo(10, 230);\n// ctx.lineTo(220, 230);\n// ctx.strokeStyle = \"red\";\n// ctx.lineWidth = 2;\n// ctx.stroke();\n// ctx.closePath();\n//\n// ctx.fillStyle = \"green\";\n// ctx.beginPath();\n// ctx.arc(300, 50, 40, 0, Math.PI * 2);\n// ctx.closePath();\n// ctx.fill();\n//\n// ctx.save();\n// ctx.translate(300, 150);\n// ctx.fillStyle = \"rebeccapurple\";\n// ctx.strokeStyle = \"red\";\n// ctx.beginPath();\n// ctx.arc(0, 0, 40, 0, Math.PI * 2);\n// ctx.fill();\n// ctx.stroke();\n// ctx.closePath();\n// ctx.restore();\n//\n// ctx.save();\n// ctx.font = \"48px monospace\";\n// ctx.fillStyle = \"rebeccapurple\";\n// ctx.fillText(\"Kottans\", 400, 50);\n// ctx.restore();\n// // console.log('11111',t);\n// function draw(t) {\n//     // console.log(t,'t');\n//   requestAnimationFrame(draw);\n//   ctx.fillStyle = \"white\";\n//   ctx.clearRect(0, 0, WIDTH, HEIGHT);\n//\n//   ctx.save();\n//\n//   let x = Math.sin(t / 300) * 100;\n//   // let y = Math.cos(t / 100) * 100;\n//   ctx.translate(300 + x, 250);\n//\n//   ctx.fillStyle = \"purple\";\n//   ctx.beginPath();\n//   ctx.arc(0, 0, 20, 0, Math.PI * 2);\n//   ctx.fill();\n//   ctx.closePath();\n//   ctx.restore();\n//\n//   let dots = 10;\n//   for (let idx = 1; idx < dots + 1; idx++) {\n//     let x = Math.sin((t / 4000) * idx) * 200;\n//     let y = Math.cos((t / 4000) * idx) * 200;\n//     ctx.save();\n//     ctx.translate(300 + x, 250 + y);\n//     ctx.fillStyle = \"purple\";\n//     ctx.beginPath();\n//     ctx.arc(0, 0, 10, 0, Math.PI * 2);\n//     ctx.fill();\n//     ctx.closePath();\n//     ctx.restore();\n//   }\n// }\n// draw(5);\n\n// // let img = new Image();\n// // img.crossOrigin = true;\n// // img.src = \"image.jpeg\";\n// // img.onload = function() {\n// //   ctx.drawImage(img, 10, 250);\n\n// //   let imdata = ctx.getImageData(0, 0, WIDTH, HEIGHT);\n\n// //   for (let idx = 0; idx < imdata.data.length; idx += 4) {\n// //     imdata.data[idx] = 255;\n// //   }\n\n// //   ctx.putImageData(imdata, 0, 0);\n// // };\n\n// // 3D with THREE.js\n// let scene = new THREE.Scene();\n// let camera = new THREE.PerspectiveCamera(30, WIDTH / HEIGHT, 1, 10000);\n// camera.position.z = 200;\n\n// let material = new THREE.ShaderMaterial({\n//   uniforms: {\n//     tExplosion: {\n//       type: \"t\",\n//       value: new THREE.TextureLoader().load(\"explosion.png\"),\n//     },\n//     time: {\n//       type: \"f\",\n//       value: 0.0,\n//     },\n//   },\n//   vertexShader: shaders.vs,\n//   fragmentShader: shaders.fs,\n// });\n\n// let mesh = new THREE.Mesh(new THREE.IcosahedronGeometry(20, 4), material);\n// scene.add(mesh);\n\n// let renderer = new THREE.WebGLRenderer();\n// renderer.setSize(WIDTH, HEIGHT);\n// renderer.setPixelRatio(window.devicePixelRatio);\n\n// // rootElement.children[0].remove();\n// // rootElement.appendChild(renderer.domElement);\n// // render();\n\n// function render(t) {\n//   material.uniforms[\"time\"].value = 0.00025 * t;\n//   renderer.render(scene, camera);\n//   requestAnimationFrame(render);\n// }\n"],"sourceRoot":""}