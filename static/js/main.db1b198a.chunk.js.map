{"version":3,"sources":["color.js","Statistics.js","App.js","index.js"],"names":["color","COLOR","null","mixed","HTML","JavaScript","Java","Python","CSS","PHP","Ruby","C++","C#","Shell","C","Objective - C","R","VimL","Go","Perl","CoffeeScript","TeX","Swift","Scala","Emacs","Lisp","Haskell","Lua","Clojure","Matlab","Arduino","Groovy","Puppet","Rust","PowerShell","Erlang","Visual Basic","Processing","Assembly","TypeScript","XSLT","ActionScript","ASP","OCaml","D","Scheme","Dart","Julia","F","Elixir","FORTRAN","Haxe","Racket","Logos","render","ctx","_ref","resArr","rt","width","height","repos","repoName","requestAnimationFrame","background","Image","src","fillStyle","createPattern","fill","fillRect","Object","keys","length","save","font","txt","txtWidth","measureText","fillText","restore","forEach","obj","i","key","r","value","strokeStyle","beginPath","LANG","arc","Math","PI","stroke","closePath","ball","ind","expr","x","vx","y","vy","radius","draw","message","text","Statistics","this","canvas","getContext","props","unique","Array","from","map","item","language","filter","index","self","indexOf","res","j","push","drawBall","_this$props","quantity","balls","_loop","size","name","random","_this","_this$props2","react_default","a","createElement","ref","node","React","PureComponent","WIDTH","window","innerWidth","HEIGHT","innerHeight","App","state","error","info","id","avatar_url","alt","login","_this2","_this$state","style","display","flexDirection","alignItems","Statistics_Statistics","className","position","padding","onSubmit","e","preventDefault","url","concat","fetch","then","json","fetchRepos","setState","catch","fetchAccount","placeholder","onChange","target","renderList","showInfo","Component","rootElement","document","getElementById","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.db1b198a.chunk.js","sourcesContent":["const COLOR = {\n\n    'null':'#bbdb93',\n\n    'mixed':'#bbdb93',\n\n    'HTML': '#4e6779',\n\n    'JavaScript': '#39675a',\n\n    'Java': '#b4c3a8',\n\n    'Python': '#4f3717',\n\n    'CSS': '#84a580',\n\n    'PHP': '#b4c2a5',\n\n    'Ruby': '#1e3c49',\n\n    'C++': '#392810',\n\n    'C#': '#1e3c49',\n\n    'Shell': '#4e84e6',\n\n    'C': '#6b8ea3',\n\n    'Objective - C': '#5b565b',\n\n    'R': '#5cb8b4',\n\n    'VimL': '#fff',\n\n    'Go': '#264b3e',\n\n    'Perl': '#64a896',\n\n    'CoffeeScript':'#2f5f75',\n\n    'TeX':'#2a5466',\n\n    'Swift':'#744c25',\n\n    'Scala':'#1f170b',\n\n    'Emacs': '#4e6779',\n\n    'Lisp': '#1a342b',\n\n    'Haskell':'#061412',\n\n    'Lua':'#376957',\n\n    'Clojure':'#2d2d2d',\n\n    'Matlab':'#666666',\n\n    'Arduino':'#39675a',\n\n    'Groovy': '#b4c3a8',\n\n    'Puppet': '#4f3717',\n\n    'Rust':'#84a580',\n\n    'PowerShell':'#1e3c49',\n\n    'Erlang': '#4f3717',\n\n    'Visual Basic':'#39675a',\n\n    'Processing':'#1e3c49',\n\n    'Assembly': '#b4c3a8',\n\n    'TypeScript': '#4e84e6',\n\n    'XSLT':'#84a580',\n\n    'ActionScript':'#1e3c49',\n\n    'ASP': '#b4c3a8',\n\n    'OCaml': '#4e84e6',\n\n    'D': '#4f3717',\n\n    'Scheme': '#4e84e6',\n\n    'Dart':'#1e3c49',\n\n    'Julia': '#4e84e6',\n\n    'F':'#84a580',\n\n    'Elixir':'#1e3c49',\n\n    'FORTRAN': '#b4c3a8',\n\n    'Haxe': '#4f3717',\n\n    'Racket':'#39675a',\n\n    'Logos':'#84a580',\n};\nexport default {COLOR}\n","import React from \"react\";\nimport LANG from './color'\n\nfunction render(ctx, { width, height, repos, repoName },resArr, rt) {\n  requestAnimationFrame(() => render(ctx, { width, height, repos, repoName },resArr,rt));\n  // let t = performance.now();\n  let background = new Image();\n  background.src = 'static/media/space2.fa3e3e78.jpg';\n  ctx.fillStyle =ctx.createPattern(background,'repeat');\n  ctx.fill();\n  ctx.fillRect(0, 0, width, height);\n\n  if (Object.keys(repos).length === 0){\n    ctx.save();\n    ctx.font = \"32px Montserrat\";\n    ctx.fillStyle = \"white\";\n    let txt = \"Let's check your GitHub repo!\";\n    let txtWidth = ctx.measureText(txt).width;\n    ctx.fillText(txt, width/2-txtWidth/2, height/2-16);\n    ctx.restore();\n  }else{\n    ctx.save();\n    ctx.font = \"24px Montserrat\";\n    ctx.fillStyle = \"white\";\n    resArr.forEach((obj,i)=>{\n      for(let key in obj) {\n        let r = 0;\n        let value = obj[key];\n        ctx.strokeStyle = \"white\";\n        ctx.beginPath();\n        ctx.save();\n        ctx.fillStyle = LANG.COLOR[key];\n\n        ctx.arc(100+r*100, i*50+70+r, value*2, 0, Math.PI * 2);\n        ctx.stroke();\n        ctx.fill();\n        ctx.restore();\n        ctx.closePath();\n\n        (key!=='null') ? ctx.fillText(key+' ['+value+']', 100+r*100, i*50+70) : ctx.fillText('Mixed'+' ['+value+']', 100+r*100, i*50+70);\n        r++;\n      }\n    });\n    ctx.restore();\n\n\n    rt.forEach((ball,ind) => {\n      let expr = (ind>10)?(ind/10):ind+1;\n      ball.x+=ball.vx*expr/20;\n      ball.y+=ball.vy*expr/15;\n\n      if (ball.y + ball.vy > height-ball.radius || ball.y + ball.vy < ball.radius) {\n        ball.vy = -ball.vy;\n      }\n      if (ball.x + ball.vx > width-ball.radius || ball.x + ball.vx < ball.radius) {\n        ball.vx = -ball.vx;\n      }\n\n      ball.draw();\n    });\n\n\n  }\n  if(repos.message === 'Not Found'){\n\n    ctx.save();\n    ctx.font = \"24px Montserrat\";\n    ctx.fillStyle = \"white\";\n    let text = 'There is no '+repoName+' galaxy in GitHub Universe';\n    let txtWidth = ctx.measureText(text).width;\n    ctx.fillText(text, width/2-txtWidth/2, height/2+12);\n    ctx.restore();\n  }\n\n}\n\nexport default class Statistics extends React.PureComponent {\n\n\n  componentDidMount() {\n    this.ctx = this.canvas.getContext(\"2d\");\n    render(this.ctx, this.props);\n\n  }\n  componentDidUpdate() {\n    let {repos} = this.props;\n    let resArr = [];\n    let languages = Array.from(repos).map(item => item.language);\n    let unique = languages.filter( (value, index, self) => self.indexOf(value) === index);\n    for (let i=0; i<unique.length; i++){\n      let res = {};\n      let key = unique[i];\n      res[key]=0;\n      for(let j=0; j<repos.length; j++) {\n        if (Array.from(repos)[j].language === unique[i]) {\n          res[key]++;\n        }\n      }\n      resArr.push(res);\n\n    }\n\n    render(this.ctx, this.props, resArr, this.drawBall());\n  }\n\n  drawBall(){\n    let {repos, width, height} = this.props;\n    let quantity = repos.length;\n    let ctx = this.ctx;\n    let balls = [];\n    for(let i=0; i<quantity; i++){\n      let size = Array.from(repos)[i].size;\n      let language = Array.from(repos)[i].language;\n      let name = Array.from(repos)[i].name;\n      let ball = {\n        x: Math.random()*(width-2*size/1000)+size/1000,\n        y: Math.random()*(height-2*size/1000)+size/1000,\n        vx: 4,\n        vy: 3,\n        radius: size/1000,\n        color: LANG.COLOR[language],\n        draw: function() {\n          ctx.save();\n          ctx.beginPath();\n          ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\n          ctx.closePath();\n          ctx.fillStyle = this.color;\n          ctx.fill();\n          ctx.strokeStyle = \"white\";\n          ctx.stroke();\n          ctx.save();\n          ctx.font = \"14px Montserrat\";\n          ctx.fillStyle='#fff';\n          let txtWidth = ctx.measureText(name).width;\n          ctx.fillText(name, this.x-txtWidth/2, this.y+7);\n          ctx.restore();\n          ctx.restore();\n        }\n      };\n      balls.push(ball);\n    }\n\n\n    return balls;\n  }\n  render() {\n    const { width, height } = this.props;\n    return (\n\n      <canvas\n        ref={node => {\n          this.canvas = node;\n        }}\n        width={width}\n        height={height}\n      />\n\n    );\n  }\n}\n","import React from \"react\";\nimport Statistics from \"./Statistics\";\nimport './styles.css';\n\nlet WIDTH = window.innerWidth;\nlet HEIGHT = window.innerHeight;\n\nfunction fetchAccount(repoName) {\n    let url = `https://api.github.com/users/${repoName}`;\n    return fetch(url).then(r => r.json());\n}\n\nfunction fetchRepos(repoName) {\n  let url = `https://api.github.com/users/${repoName}/repos?sort=updated&direction=desc`;\n\n  return fetch(url).then(r => r.json());\n}\n\nexport default class App extends React.Component {\n  state = {\n    repoName: \"\",\n    repos: {},\n    error: null,\n    info:{},\n  };\n  renderList (props) {\n      return (\n          <ul>\n              {Array.from(props).map((item)=>(\n                  <li key={item.id}>{item.name} <strong>({item.language ? item.language : 'mixed'})</strong>  {item.size} KB</li>\n            ))}\n          </ul>\n      )\n  }\n    showInfo(){\n        let {info} = this.state;\n        return (\n            <div>\n                {info.name?<img src={info.avatar_url} alt={info.login}/>:''}\n                <span>{info.name}</span>\n            </div>\n        )\n    }\n  render() {\n    const { repoName, repos, error} = this.state;\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Statistics repos={repos} width={WIDTH} height={HEIGHT} repoName={repoName}/>\n        <div className={'info'}\n             style={{'position':'absolute'}}\n        >\n\n          <form\n              style={{\n                padding: \"16px 40px\",\n              }}\n              onSubmit={e => {\n                e.preventDefault();\n                fetchRepos(repoName)\n                    .then(repos => {\n                      this.setState({ repos });\n                    })\n                    .catch(error => this.setState({ error }));\n                fetchAccount(repoName)\n                    .then(info =>{\n                        this.setState({info})\n                    })\n              }}\n          >\n            <input\n                value={repoName}\n                placeholder={'Enter github name'}\n                onChange={e => this.setState({ repoName: e.target.value })}\n            />\n            <button>Submit</button>\n          </form>\n          {error && <pre style={{ color: \"red\" }}>{error.message}</pre>}\n          {/*<pre>{JSON.stringify(repos, null, 2)}</pre>*/}\n          {this.renderList(repos)}\n\n\n        </div>\n        <div className={'infoAcc'}>\n            {this.showInfo()}\n        </div>\n\n      </div>\n\n    );\n\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import * as THREE from \"three\";\n// import * as shaders from \"./shaders\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n// let WIDTH = window.innerWidth;\n// let HEIGHT = window.innerHeight;\n// let canvas = document.createElement(\"canvas\");\n// canvas.width = WIDTH;\n// canvas.height = HEIGHT;\n//\n//\n// rootElement.append(canvas);\n// //\n// let ctx = canvas.getContext(\"2d\");\n//\n// ctx.fillRect(10, 10, 100, 200);\n//\n// ctx.fillStyle = \"red\";\n// ctx.fillRect(120, 10, 100, 200);\n//\n// ctx.moveTo(10, 230);\n// ctx.lineTo(220, 230);\n// ctx.strokeStyle = \"red\";\n// ctx.lineWidth = 2;\n// ctx.stroke();\n// ctx.closePath();\n//\n// ctx.fillStyle = \"green\";\n// ctx.beginPath();\n// ctx.arc(300, 50, 40, 0, Math.PI * 2);\n// ctx.closePath();\n// ctx.fill();\n//\n// ctx.save();\n// ctx.translate(300, 150);\n// ctx.fillStyle = \"rebeccapurple\";\n// ctx.strokeStyle = \"red\";\n// ctx.beginPath();\n// ctx.arc(0, 0, 40, 0, Math.PI * 2);\n// ctx.fill();\n// ctx.stroke();\n// ctx.closePath();\n// ctx.restore();\n//\n// ctx.save();\n// ctx.font = \"48px monospace\";\n// ctx.fillStyle = \"rebeccapurple\";\n// ctx.fillText(\"Kottans\", 400, 50);\n// ctx.restore();\n// // console.log('11111',t);\n// function draw(t) {\n//     // console.log(t,'t');\n//   requestAnimationFrame(draw);\n//   ctx.fillStyle = \"white\";\n//   ctx.clearRect(0, 0, WIDTH, HEIGHT);\n//\n//   ctx.save();\n//\n//   let x = Math.sin(t / 300) * 100;\n//   // let y = Math.cos(t / 100) * 100;\n//   ctx.translate(300 + x, 250);\n//\n//   ctx.fillStyle = \"purple\";\n//   ctx.beginPath();\n//   ctx.arc(0, 0, 20, 0, Math.PI * 2);\n//   ctx.fill();\n//   ctx.closePath();\n//   ctx.restore();\n//\n//   let dots = 10;\n//   for (let idx = 1; idx < dots + 1; idx++) {\n//     let x = Math.sin((t / 4000) * idx) * 200;\n//     let y = Math.cos((t / 4000) * idx) * 200;\n//     ctx.save();\n//     ctx.translate(300 + x, 250 + y);\n//     ctx.fillStyle = \"purple\";\n//     ctx.beginPath();\n//     ctx.arc(0, 0, 10, 0, Math.PI * 2);\n//     ctx.fill();\n//     ctx.closePath();\n//     ctx.restore();\n//   }\n// }\n// draw(5);\n\n// // let img = new Image();\n// // img.crossOrigin = true;\n// // img.src = \"image.jpeg\";\n// // img.onload = function() {\n// //   ctx.drawImage(img, 10, 250);\n\n// //   let imdata = ctx.getImageData(0, 0, WIDTH, HEIGHT);\n\n// //   for (let idx = 0; idx < imdata.data.length; idx += 4) {\n// //     imdata.data[idx] = 255;\n// //   }\n\n// //   ctx.putImageData(imdata, 0, 0);\n// // };\n\n// // 3D with THREE.js\n// let scene = new THREE.Scene();\n// let camera = new THREE.PerspectiveCamera(30, WIDTH / HEIGHT, 1, 10000);\n// camera.position.z = 200;\n\n// let material = new THREE.ShaderMaterial({\n//   uniforms: {\n//     tExplosion: {\n//       type: \"t\",\n//       value: new THREE.TextureLoader().load(\"explosion.png\"),\n//     },\n//     time: {\n//       type: \"f\",\n//       value: 0.0,\n//     },\n//   },\n//   vertexShader: shaders.vs,\n//   fragmentShader: shaders.fs,\n// });\n\n// let mesh = new THREE.Mesh(new THREE.IcosahedronGeometry(20, 4), material);\n// scene.add(mesh);\n\n// let renderer = new THREE.WebGLRenderer();\n// renderer.setSize(WIDTH, HEIGHT);\n// renderer.setPixelRatio(window.devicePixelRatio);\n\n// // rootElement.children[0].remove();\n// // rootElement.appendChild(renderer.domElement);\n// // render();\n\n// function render(t) {\n//   material.uniforms[\"time\"].value = 0.00025 * t;\n//   renderer.render(scene, camera);\n//   requestAnimationFrame(render);\n// }\n\n\n"],"sourceRoot":""}